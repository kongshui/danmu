// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/lottery.proto

package pmsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LotteryMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpenId        string                 `protobuf:"bytes,1,opt,name=OpenId,proto3" json:"OpenId,omitempty"`         // 用户OpenId
	NickName      string                 `protobuf:"bytes,2,opt,name=NickName,proto3" json:"NickName,omitempty"`     // 用户昵称
	HeadImgUrl    string                 `protobuf:"bytes,3,opt,name=HeadImgUrl,proto3" json:"HeadImgUrl,omitempty"` // 用户头像
	LotteryMap    string                 `protobuf:"bytes,4,opt,name=LotteryMap,proto3" json:"LotteryMap,omitempty"` // 抽奖结果 json string
	Count         int64                  `protobuf:"varint,5,opt,name=Count,proto3" json:"Count,omitempty"`          // 礼物数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LotteryMsg) Reset() {
	*x = LotteryMsg{}
	mi := &file_proto_lottery_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LotteryMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryMsg) ProtoMessage() {}

func (x *LotteryMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lottery_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryMsg.ProtoReflect.Descriptor instead.
func (*LotteryMsg) Descriptor() ([]byte, []int) {
	return file_proto_lottery_proto_rawDescGZIP(), []int{0}
}

func (x *LotteryMsg) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *LotteryMsg) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *LotteryMsg) GetHeadImgUrl() string {
	if x != nil {
		return x.HeadImgUrl
	}
	return ""
}

func (x *LotteryMsg) GetLotteryMap() string {
	if x != nil {
		return x.LotteryMap
	}
	return ""
}

func (x *LotteryMsg) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_proto_lottery_proto protoreflect.FileDescriptor

const file_proto_lottery_proto_rawDesc = "" +
	"\n" +
	"\x13proto/lottery.proto\x12\x04pmsg\"\x96\x01\n" +
	"\n" +
	"LotteryMsg\x12\x16\n" +
	"\x06OpenId\x18\x01 \x01(\tR\x06OpenId\x12\x1a\n" +
	"\bNickName\x18\x02 \x01(\tR\bNickName\x12\x1e\n" +
	"\n" +
	"HeadImgUrl\x18\x03 \x01(\tR\n" +
	"HeadImgUrl\x12\x1e\n" +
	"\n" +
	"LotteryMap\x18\x04 \x01(\tR\n" +
	"LotteryMap\x12\x14\n" +
	"\x05Count\x18\x05 \x01(\x03R\x05CountB\bZ\x06./pmsgb\x06proto3"

var (
	file_proto_lottery_proto_rawDescOnce sync.Once
	file_proto_lottery_proto_rawDescData []byte
)

func file_proto_lottery_proto_rawDescGZIP() []byte {
	file_proto_lottery_proto_rawDescOnce.Do(func() {
		file_proto_lottery_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_lottery_proto_rawDesc), len(file_proto_lottery_proto_rawDesc)))
	})
	return file_proto_lottery_proto_rawDescData
}

var file_proto_lottery_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_lottery_proto_goTypes = []any{
	(*LotteryMsg)(nil), // 0: pmsg.LotteryMsg
}
var file_proto_lottery_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_lottery_proto_init() }
func file_proto_lottery_proto_init() {
	if File_proto_lottery_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_lottery_proto_rawDesc), len(file_proto_lottery_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_lottery_proto_goTypes,
		DependencyIndexes: file_proto_lottery_proto_depIdxs,
		MessageInfos:      file_proto_lottery_proto_msgTypes,
	}.Build()
	File_proto_lottery_proto = out.File
	file_proto_lottery_proto_goTypes = nil
	file_proto_lottery_proto_depIdxs = nil
}
