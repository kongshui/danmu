// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/addwinnerstreamcoin.proto

package pmsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddWinnerStreamCoinMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsEnd         bool                   `protobuf:"varint,1,opt,name=IsEnd,proto3" json:"IsEnd,omitempty"` // 是否结束
	UserList      []*AddWinnerStreamCoin `protobuf:"bytes,2,rep,name=UserList,proto3" json:"UserList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddWinnerStreamCoinMessage) Reset() {
	*x = AddWinnerStreamCoinMessage{}
	mi := &file_proto_addwinnerstreamcoin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWinnerStreamCoinMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWinnerStreamCoinMessage) ProtoMessage() {}

func (x *AddWinnerStreamCoinMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_addwinnerstreamcoin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWinnerStreamCoinMessage.ProtoReflect.Descriptor instead.
func (*AddWinnerStreamCoinMessage) Descriptor() ([]byte, []int) {
	return file_proto_addwinnerstreamcoin_proto_rawDescGZIP(), []int{0}
}

func (x *AddWinnerStreamCoinMessage) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *AddWinnerStreamCoinMessage) GetUserList() []*AddWinnerStreamCoin {
	if x != nil {
		return x.UserList
	}
	return nil
}

type AddWinnerStreamCoin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpenId        string                 `protobuf:"bytes,1,opt,name=OpenId,proto3" json:"OpenId,omitempty"`             // 用户open_id
	AddNum        int64                  `protobuf:"varint,2,opt,name=AddNum,proto3" json:"AddNum,omitempty"`            // 添加多少连胜币
	RoomId        string                 `protobuf:"bytes,3,opt,name=RoomId,proto3" json:"RoomId,omitempty"`             // 房间id
	AnchorOpenId  string                 `protobuf:"bytes,4,opt,name=AnchorOpenId,proto3" json:"AnchorOpenId,omitempty"` // 主播open_id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddWinnerStreamCoin) Reset() {
	*x = AddWinnerStreamCoin{}
	mi := &file_proto_addwinnerstreamcoin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWinnerStreamCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWinnerStreamCoin) ProtoMessage() {}

func (x *AddWinnerStreamCoin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_addwinnerstreamcoin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWinnerStreamCoin.ProtoReflect.Descriptor instead.
func (*AddWinnerStreamCoin) Descriptor() ([]byte, []int) {
	return file_proto_addwinnerstreamcoin_proto_rawDescGZIP(), []int{1}
}

func (x *AddWinnerStreamCoin) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *AddWinnerStreamCoin) GetAddNum() int64 {
	if x != nil {
		return x.AddNum
	}
	return 0
}

func (x *AddWinnerStreamCoin) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *AddWinnerStreamCoin) GetAnchorOpenId() string {
	if x != nil {
		return x.AnchorOpenId
	}
	return ""
}

type ResponseAddWinnerStreamCoinMessage struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	UserList      []*ResponseAddWinnerStreamCoin `protobuf:"bytes,1,rep,name=UserList,proto3" json:"UserList,omitempty"`
	Side          string                         `protobuf:"bytes,2,opt,name=Side,proto3" json:"Side,omitempty"`            // 哪边查询
	TimeStamp     int64                          `protobuf:"varint,3,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"` // 毫秒级时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseAddWinnerStreamCoinMessage) Reset() {
	*x = ResponseAddWinnerStreamCoinMessage{}
	mi := &file_proto_addwinnerstreamcoin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseAddWinnerStreamCoinMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAddWinnerStreamCoinMessage) ProtoMessage() {}

func (x *ResponseAddWinnerStreamCoinMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_addwinnerstreamcoin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAddWinnerStreamCoinMessage.ProtoReflect.Descriptor instead.
func (*ResponseAddWinnerStreamCoinMessage) Descriptor() ([]byte, []int) {
	return file_proto_addwinnerstreamcoin_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseAddWinnerStreamCoinMessage) GetUserList() []*ResponseAddWinnerStreamCoin {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *ResponseAddWinnerStreamCoinMessage) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *ResponseAddWinnerStreamCoinMessage) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

type ResponseAddWinnerStreamCoin struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OpenId            string                 `protobuf:"bytes,1,opt,name=OpenId,proto3" json:"OpenId,omitempty"`                        // 用户open_id
	WinningStreamCoin int64                  `protobuf:"varint,2,opt,name=WinningStreamCoin,proto3" json:"WinningStreamCoin,omitempty"` // 现存连胜币
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ResponseAddWinnerStreamCoin) Reset() {
	*x = ResponseAddWinnerStreamCoin{}
	mi := &file_proto_addwinnerstreamcoin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseAddWinnerStreamCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAddWinnerStreamCoin) ProtoMessage() {}

func (x *ResponseAddWinnerStreamCoin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_addwinnerstreamcoin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAddWinnerStreamCoin.ProtoReflect.Descriptor instead.
func (*ResponseAddWinnerStreamCoin) Descriptor() ([]byte, []int) {
	return file_proto_addwinnerstreamcoin_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseAddWinnerStreamCoin) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *ResponseAddWinnerStreamCoin) GetWinningStreamCoin() int64 {
	if x != nil {
		return x.WinningStreamCoin
	}
	return 0
}

var File_proto_addwinnerstreamcoin_proto protoreflect.FileDescriptor

const file_proto_addwinnerstreamcoin_proto_rawDesc = "" +
	"\n" +
	"\x1fproto/addwinnerstreamcoin.proto\x12\x04pmsg\"i\n" +
	"\x1aAddWinnerStreamCoinMessage\x12\x14\n" +
	"\x05IsEnd\x18\x01 \x01(\bR\x05IsEnd\x125\n" +
	"\bUserList\x18\x02 \x03(\v2\x19.pmsg.AddWinnerStreamCoinR\bUserList\"\x81\x01\n" +
	"\x13AddWinnerStreamCoin\x12\x16\n" +
	"\x06OpenId\x18\x01 \x01(\tR\x06OpenId\x12\x16\n" +
	"\x06AddNum\x18\x02 \x01(\x03R\x06AddNum\x12\x16\n" +
	"\x06RoomId\x18\x03 \x01(\tR\x06RoomId\x12\"\n" +
	"\fAnchorOpenId\x18\x04 \x01(\tR\fAnchorOpenId\"\x95\x01\n" +
	"\"ResponseAddWinnerStreamCoinMessage\x12=\n" +
	"\bUserList\x18\x01 \x03(\v2!.pmsg.ResponseAddWinnerStreamCoinR\bUserList\x12\x12\n" +
	"\x04Side\x18\x02 \x01(\tR\x04Side\x12\x1c\n" +
	"\tTimeStamp\x18\x03 \x01(\x03R\tTimeStamp\"c\n" +
	"\x1bResponseAddWinnerStreamCoin\x12\x16\n" +
	"\x06OpenId\x18\x01 \x01(\tR\x06OpenId\x12,\n" +
	"\x11WinningStreamCoin\x18\x02 \x01(\x03R\x11WinningStreamCoinB\bZ\x06./pmsgb\x06proto3"

var (
	file_proto_addwinnerstreamcoin_proto_rawDescOnce sync.Once
	file_proto_addwinnerstreamcoin_proto_rawDescData []byte
)

func file_proto_addwinnerstreamcoin_proto_rawDescGZIP() []byte {
	file_proto_addwinnerstreamcoin_proto_rawDescOnce.Do(func() {
		file_proto_addwinnerstreamcoin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_addwinnerstreamcoin_proto_rawDesc), len(file_proto_addwinnerstreamcoin_proto_rawDesc)))
	})
	return file_proto_addwinnerstreamcoin_proto_rawDescData
}

var file_proto_addwinnerstreamcoin_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_addwinnerstreamcoin_proto_goTypes = []any{
	(*AddWinnerStreamCoinMessage)(nil),         // 0: pmsg.AddWinnerStreamCoinMessage
	(*AddWinnerStreamCoin)(nil),                // 1: pmsg.AddWinnerStreamCoin
	(*ResponseAddWinnerStreamCoinMessage)(nil), // 2: pmsg.ResponseAddWinnerStreamCoinMessage
	(*ResponseAddWinnerStreamCoin)(nil),        // 3: pmsg.ResponseAddWinnerStreamCoin
}
var file_proto_addwinnerstreamcoin_proto_depIdxs = []int32{
	1, // 0: pmsg.AddWinnerStreamCoinMessage.UserList:type_name -> pmsg.AddWinnerStreamCoin
	3, // 1: pmsg.ResponseAddWinnerStreamCoinMessage.UserList:type_name -> pmsg.ResponseAddWinnerStreamCoin
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_addwinnerstreamcoin_proto_init() }
func file_proto_addwinnerstreamcoin_proto_init() {
	if File_proto_addwinnerstreamcoin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_addwinnerstreamcoin_proto_rawDesc), len(file_proto_addwinnerstreamcoin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_addwinnerstreamcoin_proto_goTypes,
		DependencyIndexes: file_proto_addwinnerstreamcoin_proto_depIdxs,
		MessageInfos:      file_proto_addwinnerstreamcoin_proto_msgTypes,
	}.Build()
	File_proto_addwinnerstreamcoin_proto = out.File
	file_proto_addwinnerstreamcoin_proto_goTypes = nil
	file_proto_addwinnerstreamcoin_proto_depIdxs = nil
}
