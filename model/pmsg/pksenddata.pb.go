// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/pksenddata.proto

package pmsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PkSendDataMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // group名称
	Data          []*PkData              `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`                      // 发送数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkSendDataMessage) Reset() {
	*x = PkSendDataMessage{}
	mi := &file_proto_pksenddata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkSendDataMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkSendDataMessage) ProtoMessage() {}

func (x *PkSendDataMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pksenddata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkSendDataMessage.ProtoReflect.Descriptor instead.
func (*PkSendDataMessage) Descriptor() ([]byte, []int) {
	return file_proto_pksenddata_proto_rawDescGZIP(), []int{0}
}

func (x *PkSendDataMessage) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *PkSendDataMessage) GetData() []*PkData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PkData struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PeopleNum         int64                  `protobuf:"varint,1,opt,name=people_num,json=peopleNum,proto3" json:"people_num,omitempty"`                            // 人数
	IntegralPool      int64                  `protobuf:"varint,2,opt,name=integral_pool,json=integralPool,proto3" json:"integral_pool,omitempty"`                   // 积分
	NodeIntegral      int64                  `protobuf:"varint,3,opt,name=node_integral,json=nodeIntegral,proto3" json:"node_integral,omitempty"`                   //进度条积分
	CoinCount         int64                  `protobuf:"varint,4,opt,name=coin_count,json=coinCount,proto3" json:"coin_count,omitempty"`                            // 连胜币数量
	Angle             float64                `protobuf:"fixed64,5,opt,name=angle,proto3" json:"angle,omitempty"`                                                    // 角度
	TopThree          []*PkPeopleData        `protobuf:"bytes,6,rep,name=top_three,json=topThree,proto3" json:"top_three,omitempty"`                                // 前三名信息
	Direction         string                 `protobuf:"bytes,7,opt,name=direction,proto3" json:"direction,omitempty"`                                              // 方向
	LotteryOpenId     string                 `protobuf:"bytes,8,opt,name=lottery_open_id,json=lotteryOpenId,proto3" json:"lottery_open_id,omitempty"`               // 抽奖openId
	StrengthLeftAll   int64                  `protobuf:"varint,9,opt,name=strength_left_all,json=strengthLeftAll,proto3" json:"strength_left_all,omitempty"`        // 左边总腕力
	StrengthRightAll  int64                  `protobuf:"varint,10,opt,name=strength_right_all,json=strengthRightAll,proto3" json:"strength_right_all,omitempty"`    // 右边总腕力
	StrengthLeftBase  int64                  `protobuf:"varint,11,opt,name=strength_left_base,json=strengthLeftBase,proto3" json:"strength_left_base,omitempty"`    // 左边基础腕力
	StrengthRightBase int64                  `protobuf:"varint,12,opt,name=strength_right_base,json=strengthRightBase,proto3" json:"strength_right_base,omitempty"` // 右边基础腕力
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PkData) Reset() {
	*x = PkData{}
	mi := &file_proto_pksenddata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkData) ProtoMessage() {}

func (x *PkData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pksenddata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkData.ProtoReflect.Descriptor instead.
func (*PkData) Descriptor() ([]byte, []int) {
	return file_proto_pksenddata_proto_rawDescGZIP(), []int{1}
}

func (x *PkData) GetPeopleNum() int64 {
	if x != nil {
		return x.PeopleNum
	}
	return 0
}

func (x *PkData) GetIntegralPool() int64 {
	if x != nil {
		return x.IntegralPool
	}
	return 0
}

func (x *PkData) GetNodeIntegral() int64 {
	if x != nil {
		return x.NodeIntegral
	}
	return 0
}

func (x *PkData) GetCoinCount() int64 {
	if x != nil {
		return x.CoinCount
	}
	return 0
}

func (x *PkData) GetAngle() float64 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *PkData) GetTopThree() []*PkPeopleData {
	if x != nil {
		return x.TopThree
	}
	return nil
}

func (x *PkData) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *PkData) GetLotteryOpenId() string {
	if x != nil {
		return x.LotteryOpenId
	}
	return ""
}

func (x *PkData) GetStrengthLeftAll() int64 {
	if x != nil {
		return x.StrengthLeftAll
	}
	return 0
}

func (x *PkData) GetStrengthRightAll() int64 {
	if x != nil {
		return x.StrengthRightAll
	}
	return 0
}

func (x *PkData) GetStrengthLeftBase() int64 {
	if x != nil {
		return x.StrengthLeftBase
	}
	return 0
}

func (x *PkData) GetStrengthRightBase() int64 {
	if x != nil {
		return x.StrengthRightBase
	}
	return 0
}

type PkPeopleData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpenId        string                 `protobuf:"bytes,1,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"` // 用户openId
	Integral      int64                  `protobuf:"varint,2,opt,name=integral,proto3" json:"integral,omitempty"`          // 用户积分积分
	Coin          int64                  `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`                  // 连胜币
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkPeopleData) Reset() {
	*x = PkPeopleData{}
	mi := &file_proto_pksenddata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkPeopleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkPeopleData) ProtoMessage() {}

func (x *PkPeopleData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pksenddata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkPeopleData.ProtoReflect.Descriptor instead.
func (*PkPeopleData) Descriptor() ([]byte, []int) {
	return file_proto_pksenddata_proto_rawDescGZIP(), []int{2}
}

func (x *PkPeopleData) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *PkPeopleData) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *PkPeopleData) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

var File_proto_pksenddata_proto protoreflect.FileDescriptor

const file_proto_pksenddata_proto_rawDesc = "" +
	"\n" +
	"\x16proto/pksenddata.proto\x12\x04pmsg\"P\n" +
	"\x11PkSendDataMessage\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12 \n" +
	"\x04data\x18\x02 \x03(\v2\f.pmsg.PkDataR\x04data\"\xd5\x03\n" +
	"\x06PkData\x12\x1d\n" +
	"\n" +
	"people_num\x18\x01 \x01(\x03R\tpeopleNum\x12#\n" +
	"\rintegral_pool\x18\x02 \x01(\x03R\fintegralPool\x12#\n" +
	"\rnode_integral\x18\x03 \x01(\x03R\fnodeIntegral\x12\x1d\n" +
	"\n" +
	"coin_count\x18\x04 \x01(\x03R\tcoinCount\x12\x14\n" +
	"\x05angle\x18\x05 \x01(\x01R\x05angle\x12/\n" +
	"\ttop_three\x18\x06 \x03(\v2\x12.pmsg.PkPeopleDataR\btopThree\x12\x1c\n" +
	"\tdirection\x18\a \x01(\tR\tdirection\x12&\n" +
	"\x0flottery_open_id\x18\b \x01(\tR\rlotteryOpenId\x12*\n" +
	"\x11strength_left_all\x18\t \x01(\x03R\x0fstrengthLeftAll\x12,\n" +
	"\x12strength_right_all\x18\n" +
	" \x01(\x03R\x10strengthRightAll\x12,\n" +
	"\x12strength_left_base\x18\v \x01(\x03R\x10strengthLeftBase\x12.\n" +
	"\x13strength_right_base\x18\f \x01(\x03R\x11strengthRightBase\"W\n" +
	"\fPkPeopleData\x12\x17\n" +
	"\aopen_id\x18\x01 \x01(\tR\x06openId\x12\x1a\n" +
	"\bintegral\x18\x02 \x01(\x03R\bintegral\x12\x12\n" +
	"\x04coin\x18\x03 \x01(\x03R\x04coinB\bZ\x06./pmsgb\x06proto3"

var (
	file_proto_pksenddata_proto_rawDescOnce sync.Once
	file_proto_pksenddata_proto_rawDescData []byte
)

func file_proto_pksenddata_proto_rawDescGZIP() []byte {
	file_proto_pksenddata_proto_rawDescOnce.Do(func() {
		file_proto_pksenddata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_pksenddata_proto_rawDesc), len(file_proto_pksenddata_proto_rawDesc)))
	})
	return file_proto_pksenddata_proto_rawDescData
}

var file_proto_pksenddata_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_pksenddata_proto_goTypes = []any{
	(*PkSendDataMessage)(nil), // 0: pmsg.PkSendDataMessage
	(*PkData)(nil),            // 1: pmsg.PkData
	(*PkPeopleData)(nil),      // 2: pmsg.PkPeopleData
}
var file_proto_pksenddata_proto_depIdxs = []int32{
	1, // 0: pmsg.PkSendDataMessage.data:type_name -> pmsg.PkData
	2, // 1: pmsg.PkData.top_three:type_name -> pmsg.PkPeopleData
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_pksenddata_proto_init() }
func file_proto_pksenddata_proto_init() {
	if File_proto_pksenddata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_pksenddata_proto_rawDesc), len(file_proto_pksenddata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_pksenddata_proto_goTypes,
		DependencyIndexes: file_proto_pksenddata_proto_depIdxs,
		MessageInfos:      file_proto_pksenddata_proto_msgTypes,
	}.Build()
	File_proto_pksenddata_proto = out.File
	file_proto_pksenddata_proto_goTypes = nil
	file_proto_pksenddata_proto_depIdxs = nil
}
